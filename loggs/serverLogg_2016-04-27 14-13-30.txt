apr 27, 2016 2:13:30 EM server.Server <init>
INFO: KONSTRUKTORN: Server is waiting for response.

apr 27, 2016 2:13:30 EM server.Server <init>
INFO: KONSTRUKTORN: ServerSocket is created with port : 8080

apr 27, 2016 2:13:30 EM server.Server <init>
INFO: KONSTRUKTORN: Controller is created

apr 27, 2016 2:14:15 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:15 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=39946,localport=8080]

apr 27, 2016 2:14:15 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-1

apr 27, 2016 2:14:15 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Maml

apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Maml
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Maml%';
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:14:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Maml%';
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Maml, försök igen.
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Maml, försök igen.",}
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:14:16 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:16 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:14:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:14:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:14:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:16 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:20 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:20 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33281,localport=8080]

apr 27, 2016 2:14:20 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-2

apr 27, 2016 2:14:20 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:20 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:20 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:14:21 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:21 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:21 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:23 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41472,localport=8080]

apr 27, 2016 2:14:23 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-3

apr 27, 2016 2:14:23 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:14:23 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:23 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:23 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41518,localport=8080]

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-4

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:28 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33304,localport=8080]

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-5

apr 27, 2016 2:14:28 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mat

apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mat
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mat%';
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mat%';
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Mat, försök igen.
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Mat, försök igen.",}
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:14:28 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:28 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:28 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:29 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:29 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33327,localport=8080]

apr 27, 2016 2:14:29 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-6

apr 27, 2016 2:14:29 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Mat

apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Mat
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Mat';
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:14:29 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Mat';
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:14:30 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:14:30 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:14:30 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:14:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:14:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:14:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:14:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:14:30 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:14:37 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:14:37 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33718,localport=8080]

apr 27, 2016 2:14:37 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-7

apr 27, 2016 2:14:37 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:14:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:14:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:14:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,mat,Mat

apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,mat,Mat
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Mat';
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Mat';
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = null
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = null
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM null.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'mat'
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM null.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'mat'
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: CATCH SQL = com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'null.building' doesn't exist
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:14:37 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:16:39 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:16:39 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33764,localport=8080]

apr 27, 2016 2:16:39 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-8

apr 27, 2016 2:16:39 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:16:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:16:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:16:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Mat

apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Mat
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Mat';
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Mat';
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = null
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = null
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM null.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM null.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: CATCH SQL = com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'null.building' doesn't exist
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:16:39 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:26:13 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33212,localport=8080]

apr 27, 2016 2:26:13 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-9

apr 27, 2016 2:26:13 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:26:13 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:26:13 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:26:13 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33258,localport=8080]

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-10

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:26:15 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:26:15 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33281,localport=8080]

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-11

apr 27, 2016 2:26:15 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:26:15 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:26:15 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:26:15 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:26:22 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:26:22 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33304,localport=8080]

apr 27, 2016 2:26:22 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-12

apr 27, 2016 2:26:22 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:26:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:26:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:26:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:26:22 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:26:23 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:26:23 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:26:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:26:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:26:23 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:26:23 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:26:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:26:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:26:35 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:26:35 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:26:35 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:14 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33327,localport=8080]

apr 27, 2016 2:27:14 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-14

apr 27, 2016 2:27:14 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö

apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö%';
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö%';
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:27:14 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:14 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:14 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33787,localport=8080]

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-15

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:16 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:27:16 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41587,localport=8080]

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-16

apr 27, 2016 2:27:16 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:27:16 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:16 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:16 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:23 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:23 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33810,localport=8080]

apr 27, 2016 2:27:23 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-17

apr 27, 2016 2:27:23 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,nia515,Malmö Högskola

apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,nia515,Malmö Högskola
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia515'
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia515'
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 2:27:23 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:27:49 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41610,localport=8080]

apr 27, 2016 2:27:49 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-18

apr 27, 2016 2:27:49 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mamö

apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mamö
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mamö%';
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mamö%';
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Mamö, försök igen.
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Mamö, försök igen.",}
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:27:49 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:49 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:49 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:51 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33833,localport=8080]

apr 27, 2016 2:27:51 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-19

apr 27, 2016 2:27:51 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:27:51 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:51 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:51 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33856,localport=8080]

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-20

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mam

apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mam
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mam%';
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mam%';
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Mam, försök igen.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Mam, försök igen.",}
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33879,localport=8080]

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-21

apr 27, 2016 2:27:52 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:52 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:27:52 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:27:52 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:52 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:53 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41656,localport=8080]

apr 27, 2016 2:27:53 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-22

apr 27, 2016 2:27:53 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:27:53 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:53 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:27:53 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:27:57 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:27:57 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41679,localport=8080]

apr 27, 2016 2:27:57 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-23

apr 27, 2016 2:27:57 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:27:57 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:27:57 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:27:57 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:27:57 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:27:58 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:27:58 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:27:58 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:27:58 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:27:58 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:28:08 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:28:08 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:28:08 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:30:39 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:30:39 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41771,localport=8080]

apr 27, 2016 2:30:39 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-24

apr 27, 2016 2:30:39 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:30:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:30:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:30:40 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:30:40 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:30:40 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:30:41 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41794,localport=8080]

apr 27, 2016 2:30:41 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-25

apr 27, 2016 2:30:41 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:30:41 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:30:41 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:30:41 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:30:41 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:30:42 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50096,localport=8080]

apr 27, 2016 2:30:42 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-26

apr 27, 2016 2:30:42 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:30:42 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:30:42 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:30:42 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:30:46 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:30:46 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50119,localport=8080]

apr 27, 2016 2:30:46 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-27

apr 27, 2016 2:30:46 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:30:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:30:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:30:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:30:46 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:30:47 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:30:47 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:30:47 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:30:47 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:31:00 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:31:00 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:31:00 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:32:22 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50234,localport=8080]

apr 27, 2016 2:32:22 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-28

apr 27, 2016 2:32:22 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:32:22 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:32:22 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:32:22 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50257,localport=8080]

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-29

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:32:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:32:24 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50303,localport=8080]

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-30

apr 27, 2016 2:32:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:32:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:32:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:32:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:32:30 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:32:30 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50326,localport=8080]

apr 27, 2016 2:32:30 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-31

apr 27, 2016 2:32:30 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:32:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:32:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:32:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:32:30 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:32:30 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:32:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:32:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:32:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:32:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:32:46 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:33:35 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:33:35 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50349,localport=8080]

apr 27, 2016 2:33:35 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-32

apr 27, 2016 2:33:35 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:33:35 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:33:35 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:33:35 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,

apr 27, 2016 2:33:35 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,
apr 27, 2016 2:33:35 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:33:35 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:33:44 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:33:44 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50372,localport=8080]

apr 27, 2016 2:33:44 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-33

apr 27, 2016 2:33:44 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:33:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:33:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:33:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,

apr 27, 2016 2:33:44 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,
apr 27, 2016 2:33:44 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:33:44 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:33:44 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:34:46 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50395,localport=8080]

apr 27, 2016 2:34:46 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-34

apr 27, 2016 2:34:46 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:34:46 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:34:46 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:34:46 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50418,localport=8080]

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-35

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:34:48 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:34:48 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50441,localport=8080]

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-36

apr 27, 2016 2:34:48 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:34:48 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:34:48 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:34:48 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:34:53 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:34:53 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50487,localport=8080]

apr 27, 2016 2:34:53 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-37

apr 27, 2016 2:34:53 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:34:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:34:53 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:34:54 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:34:54 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:34:54 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:34:54 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:34:54 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:35:07 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:35:07 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:35:07 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:35:29 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:35:29 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50510,localport=8080]

apr 27, 2016 2:35:29 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-38

apr 27, 2016 2:35:29 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:35:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:35:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:35:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,nia0515,Malmö Högskola

apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,nia0515,Malmö Högskola
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia0515'
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia0515'
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Niagara.bmp
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Plan 5.bmp
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:35:30 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:35:30 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:35:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:35:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:35:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:35:41 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:35:41 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:13 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50556,localport=8080]

apr 27, 2016 2:37:13 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-39

apr 27, 2016 2:37:13 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ni

apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ni
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ni%';
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ni%';
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Ni, försök igen.
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Ni, försök igen.",}
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:13 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:13 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:13 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:15 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50579,localport=8080]

apr 27, 2016 2:37:15 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-40

apr 27, 2016 2:37:15 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ni:

apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ni:
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:%';
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:%';
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Ni:, försök igen.
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Ni:, försök igen.",}
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:15 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:15 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:15 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:17 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50602,localport=8080]

apr 27, 2016 2:37:17 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-41

apr 27, 2016 2:37:17 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ni:a

apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ni:a
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a%';
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a%';
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Ni:a, försök igen.
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Ni:a, försök igen.",}
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:17 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:17 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:17 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:19 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50625,localport=8080]

apr 27, 2016 2:37:19 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-42

apr 27, 2016 2:37:19 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ni:a0515

apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ni:a0515
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a0515%';
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a0515%';
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Ni:a0515, försök igen.
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Ni:a0515, försök igen.",}
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:19 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:19 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:19 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50671,localport=8080]

apr 27, 2016 2:37:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-43

apr 27, 2016 2:37:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Ni:a0515

apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Ni:a0515
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Ni:a0515';
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Ni:a0515';
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:37:24 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:37:24 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:37 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50694,localport=8080]

apr 27, 2016 2:37:37 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-44

apr 27, 2016 2:37:37 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ni:a0515

apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ni:a0515
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a0515%';
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ni:a0515%';
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Ni:a0515, försök igen.
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Ni:a0515, försök igen.",}
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:37 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:37 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:37 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:46 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50717,localport=8080]

apr 27, 2016 2:37:46 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-45

apr 27, 2016 2:37:46 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:37:46 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:46 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:46 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50740,localport=8080]

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-46

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:48 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:37:48 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50763,localport=8080]

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-47

apr 27, 2016 2:37:48 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:37:48 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:37:48 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:37:48 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:38:05 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:38:05 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=50786,localport=8080]

apr 27, 2016 2:38:05 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-48

apr 27, 2016 2:38:05 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:38:05 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:38:05 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:38:05 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,nia0515,Malmö Högskola

apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,nia0515,Malmö Högskola
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia0515'
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'nia0515'
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Niagara.bmp
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Plan 5.bmp
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:38:05 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:38:05 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:38:06 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:38:06 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:38:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:38:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:38:22 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:38:48 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:38:48 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33189,localport=8080]

apr 27, 2016 2:38:48 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-49

apr 27, 2016 2:38:48 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:38:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:38:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:38:48 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,Nia0515,Malmö Högskola

apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,Nia0515,Malmö Högskola
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'Nia0515'
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'Nia0515'
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Niagara.bmp
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/NI/Plan 5.bmp
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:38:48 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:38:49 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:38:49 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:38:49 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:38:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:38:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:39:01 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:39:01 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:39:01 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:40:22 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33235,localport=8080]

apr 27, 2016 2:40:22 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-50

apr 27, 2016 2:40:22 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malm

apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malm
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malm%';
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:40:22 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:40:22 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:40:22 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:40:23 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33258,localport=8080]

apr 27, 2016 2:40:23 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-51

apr 27, 2016 2:40:23 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:40:23 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:40:23 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:40:23 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:40:23 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:40:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33281,localport=8080]

apr 27, 2016 2:40:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-52

apr 27, 2016 2:40:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:40:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:40:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:40:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:41:29 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:41:29 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33304,localport=8080]

apr 27, 2016 2:41:29 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-53

apr 27, 2016 2:41:29 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:41:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:41:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:41:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:41:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:41:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:41:30 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:41:30 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:41:30 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:41:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:41:30 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:41:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:41:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:41:44 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:58:31 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33304,localport=8080]

apr 27, 2016 2:58:31 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-54

apr 27, 2016 2:58:31 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:58:31 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:58:31 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:58:31 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:58:33 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33327,localport=8080]

apr 27, 2016 2:58:33 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-55

apr 27, 2016 2:58:33 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:58:33 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 2:58:33 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 2:58:33 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 2:58:33 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:58:34 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33741,localport=8080]

apr 27, 2016 2:58:34 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-56

apr 27, 2016 2:58:34 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 2:58:34 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:58:34 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:58:34 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 2:58:38 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 2:58:38 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41518,localport=8080]

apr 27, 2016 2:58:38 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-57

apr 27, 2016 2:58:38 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 2:58:38 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 2:58:38 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 2:58:38 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 2:58:38 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 2:58:39 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 2:58:39 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 2:58:39 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 2:58:39 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 2:58:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 2:58:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 2:58:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 2:58:49 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 2:58:49 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:00:22 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33833,localport=8080]

apr 27, 2016 3:00:22 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-58

apr 27, 2016 3:00:22 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:00:22 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:00:22 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:00:22 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:00:23 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33856,localport=8080]

apr 27, 2016 3:00:23 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-59

apr 27, 2016 3:00:23 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mal

apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mal
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mal%';
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mal%';
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:00:23 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:00:23 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:00:23 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33879,localport=8080]

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-60

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:00:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 3:00:24 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41541,localport=8080]

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-61

apr 27, 2016 3:00:24 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:00:24 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:00:24 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:00:24 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:00:28 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:00:28 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41564,localport=8080]

apr 27, 2016 3:00:28 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-62

apr 27, 2016 3:00:28 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:00:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:00:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:00:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:00:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:00:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:00:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:00:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 3:00:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 3:00:29 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:00:29 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:00:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:00:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:00:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:00:42 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:00:42 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:02:27 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:02:27 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41587,localport=8080]

apr 27, 2016 3:02:27 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-63

apr 27, 2016 3:02:27 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:02:27 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:02:27 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:02:27 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,kl3560,Malmö Högskola

apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,kl3560,Malmö Högskola
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'kl3560'
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'kl3560'
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/KL/tandvard.bmp
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/KL/Plan 3.bmp
apr 27, 2016 3:02:27 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 3:02:28 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:02:28 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:02:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:02:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:02:38 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:02:38 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:02:38 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:03:04 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:03:04 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41610,localport=8080]

apr 27, 2016 3:03:04 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-64

apr 27, 2016 3:03:04 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:03:04 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:03:04 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:03:04 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,kl7060,Malmö Högskola

apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,kl7060,Malmö Högskola
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'kl7060'
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'kl7060'
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = null
apr 27, 2016 3:03:04 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41679,localport=8080]

apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-65

apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41656,localport=8080]

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-66

apr 27, 2016 3:04:16 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Hejhopp

apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Hejhopp
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Hejhopp';
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Hejhopp';
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 3:04:16 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Hejhopp

apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Hejhopp
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Hejhopp%';
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Hejhopp%';
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Hejhopp, försök igen.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Hejhopp, försök igen.",}
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:04:16 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:16 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:16 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:04:23 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41702,localport=8080]

apr 27, 2016 3:04:23 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-67

apr 27, 2016 3:04:23 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Ma

apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Ma
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Ma%';
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:04:23 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:23 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:23 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41725,localport=8080]

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-68

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:25 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 3:04:25 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41748,localport=8080]

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-69

apr 27, 2016 3:04:25 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:04:25 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:25 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:25 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:04:29 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41771,localport=8080]

apr 27, 2016 3:04:29 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-70

apr 27, 2016 3:04:29 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 3:04:29 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:04:29 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:04:29 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:04:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:04:39 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:04:39 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:21 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=31934,localport=8080]

apr 27, 2016 3:14:21 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-71

apr 27, 2016 3:14:21 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:14:21 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:21 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:21 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:27 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:27 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=41472,localport=8080]

apr 27, 2016 3:14:27 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-72

apr 27, 2016 3:14:27 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:27 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:27 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Hejhopp

apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Hejhopp
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Hejhopp%';
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Hejhopp%';
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Hejhopp, försök igen.
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Hejhopp, försök igen.",}
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:14:28 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:28 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:28 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:43 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33166,localport=8080]

apr 27, 2016 3:14:43 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-73

apr 27, 2016 3:14:43 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mah

apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mah
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mah%';
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mah%';
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = []
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = []
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 0
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om Arraylisten inte innegåller något så anropas errorHandler med = Det saknas en plats som innehåller bokstäverna Mah, försök igen.
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Det saknas en plats som innehåller bokstäverna Mah, försök igen.",}
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:14:43 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:43 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:43 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:44 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:44 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=33189,localport=8080]

apr 27, 2016 3:14:44 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-74

apr 27, 2016 3:14:44 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:44 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Mal

apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Mal
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Mal%';
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Mal%';
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:14:45 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:45 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:45 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:50 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=21637,localport=8080]

apr 27, 2016 3:14:50 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-75

apr 27, 2016 3:14:50 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = CNF,Malmö Högskola

apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = CNF,Malmö Högskola
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'CNF' så är vi här inne.
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Inne i metoden createSQL_CNF
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Inne i metoden
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: SQLanrop = SELECT count(1) FROM locatormain.places WHERE place = 'Malmö Högskola';
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: CATCH SQL = java.sql.SQLException: Column 'place' not found.
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: DBCommunicator/confirmComplex: Returnerar = false
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Boolean som skickas = false
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är FALSE så skickar vi följande till errorHandler = Välj en plats från listan
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Inne i metoden
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: Storlek på strängarrayen = 2
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: JSON texten = {"name": "Error","message": "Välj en plats från listan",}
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/ErrorHandler: När det skickas.
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:50 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/createSQL_CNF: Om boolean är TRUE så skickas den till sendBoolToClient = false
apr 27, 2016 3:14:50 EM server.Server LOGG
INFO: CONTROLLER/sendBoolToClient: Inne i metoden 
apr 27, 2016 3:14:50 EM server.Server sendBool
INFO: sendJsonToClient: Skickar följande: false
apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 2

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Här skickas boolean genom output streamen

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Boolean är skickat genom outputstreamen = false

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 2: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:50 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:51 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=31957,localport=8080]

apr 27, 2016 3:14:51 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-76

apr 27, 2016 3:14:51 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = GCO,Malmö Högskola

apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = GCO,Malmö Högskola
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'GCO' så är vi här inne.
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Inne i metoden createSQL_GCO
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: SQL anropet = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Inne i metoden
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: SQL anrop = SELECT place FROM locatormain.places WHERE place LIKE 'Malmö Högskola%';
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Om stmt != null så stänger vi stmt
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: DBCommunicator/searchComplex: Returnerar resultatet = [Malmö Högskola]
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Skapad Arraylist med följande innehåll = [Malmö Högskola]
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Arraylisten har storlek = 1
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/createSQL_GCO: Om arraylisten är större än 0 så skickas den via createJSON
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Inne i metoden createJSON_GCO
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: JSON som skickas = {"nbrOfPlaces": "1","place1": "Malmö Högskola",}
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Efter det är ett JSONobjekt = {"place1":"Malmö Högskola","nbrOfPlaces":"1"}
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON_GCO: Skickas till sendCompleteJSONToClient
apr 27, 2016 3:14:51 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:51 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:14:51 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:14:55 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:14:55 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=31980,localport=8080]

apr 27, 2016 3:14:55 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-77

apr 27, 2016 3:14:55 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:14:55 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:14:55 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:14:56 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 3:14:56 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:14:56 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:14:56 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:14:56 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:15:07 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:15:07 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:15:07 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

apr 27, 2016 3:16:40 EM server.Server <init>
INFO: KONSTRUKTORN: Klienten är ansluten

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler <init>
INFO: THREADHANDLER: clientSocket tilldelas = Socket[addr=/79.138.134.236,port=21660,localport=8080]

apr 27, 2016 3:16:40 EM server.Server <init>
INFO: KONSTRUKTORN: ThreadHandler är skapad av klientsocketen. Trådens namn : Thread-78

apr 27, 2016 3:16:40 EM server.Server <init>
INFO: KONSTRUKTORN: Tråden är startad

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: objectoutputstream är instansierad

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Datainputstream är instansierad

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Läser innehållet från input = SER,ord131,Malmö Högskola

apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: Kontrollerar vad controllern tar emot från klienten = SER,ord131,Malmö Högskola
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: En strängarray som innehåller allt splitande av requesten
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/msgFromClient: If 'SER' så är vi här inne.
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: efter anropad metod createSQL_SER
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Inne i metoden changeDB
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/changeDB: SQLanrop = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Inne i metoden.
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dBchange: SQLanropet = SELECT dbname FROM locatormain.places WHERE place LIKE 'Malmö Högskola';
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dBchange: Om stmt != null så stänger vid stmt
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/changeDB: Returnerat från DB = locatormah
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Har ändrat DB med följande information = locatormah
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: SQLQueryn som är genererad = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Inne i metoden.
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Anropet till DB = SELECT name, path, floors, id, map, roomid, roomCoor, doorCoor, corridorCoor FROM locatormah.building JOIN levels ON building.name=levels.building JOIN room ON levels.id = room.levels WHERE roomid = 'ord131'
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Om stmt != null så stänget vi stmt
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: DBCommunicator/dcSearchRoom: Returnerar array
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: I TRY när fromDB-arrayen ska fyllas med svar från DB. Svar = 
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/createSQL_SER: Else om fromDB är större än 2 platser. Då skickas till createJSON = 
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Inne i metoden createJSON
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Orkanen.bmp
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden stringToByte = C:/Users/Chrille/Desktop/LocatorDB/Buildings/OR/Plan1.bmp
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Inne i metoden StrinToByte
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: Efter det är encodat.
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/StrinToByte: När det skickas
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: När det gjorts om till JSON
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/CreateJSON: Innan det skickas till metoden sendCompleteJSONToClient
apr 27, 2016 3:16:40 EM server.Server LOGG
INFO: CONTROLLER/sendCompleteJSONToClient: Inne i metoden
apr 27, 2016 3:16:40 EM server.Server sendJsonToClient
INFO: sendJsonToClient: Skickar info till klient

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: msgFromClient skickas till Controller med info = 1

apr 27, 2016 3:16:40 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Här skrivs Json object genom output streamen

apr 27, 2016 3:16:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Json skickat genom output

apr 27, 2016 3:16:50 EM server.Server$ThreadHandler run
INFO: THREADHANDLER: Switch 1: Outputstreamen är flushad och stängd.

apr 27, 2016 3:16:50 EM server.Server$ThreadHandler run
VARNING: KONSTRUKTORN: CATCH IOE: java.net.SocketException: socket closed

